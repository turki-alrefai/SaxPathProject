/*
 * This file was automatically generated by EvoSuite
 */

package com.werken.saxpath;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestXPathLexer {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lmrR0Bo{ua");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(11, xPathLexer0.endPosition());
      assertEquals(true, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(false, boolean0);
      assertEquals(0, xPathLexer0.endPosition());
  }

  @Test
  public void test2()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lmrR0Bo{ua");
      // Undeclared exception!
      try {
        xPathLexer0.LA((-489));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: -490
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lmrR0Bo{ua");
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(11, xPathLexer0.endPosition());
  }

  @Test
  public void test4()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":`xnnk>;Z%V_0#,}#");
      xPathLexer0.consume((int) '.');
      assertEquals(46, xPathLexer0.currentPosition());
  }

  @Test
  public void test5()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":`xnnk>;Z%V_0#,}#");
      xPathLexer0.consume();
      assertEquals(1, xPathLexer0.currentPosition());
  }

  @Test
  public void test6()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":`xnnk>;Z%V_0#,}#");
      char char0 = xPathLexer0.LA((int) '_');
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(18, xPathLexer0.endPosition());
      assertEquals('\uFFFF', char0);
  }

  @Test
  public void test7()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('-');
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":`xnnk>;Z%V_0#,}#");
      boolean boolean0 = xPathLexer0.isIdentifierChar('.');
      assertEquals(true, boolean0);
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(true, xPathLexer0.hasMoreChars());
  }

  @Test
  public void test9()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lmrR0Bo{ua");
      boolean boolean0 = xPathLexer0.isIdentifierChar('C');
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(true, boolean0);
      assertEquals(11, xPathLexer0.endPosition());
  }

  @Test
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":`xnnk>;Z%V_0#,}#");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertEquals(true, xPathLexer0.hasMoreChars());
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":`xnnk>;Z%V_0#,}#");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('.');
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(false, boolean0);
      assertEquals(18, xPathLexer0.endPosition());
  }

  @Test
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}lmrR0Bo{ua");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('C');
      assertEquals(0, xPathLexer0.currentPosition());
      assertEquals(true, boolean0);
      assertEquals(true, xPathLexer0.hasMoreChars());
  }
}
